// Code generated by codegen. DO NOT EDIT.

package v1beta

import (
	v1beta "github.com/kraudcloud/wga/apis/wga.kraudcloud.com/v1beta"
	"github.com/rancher/lasso/pkg/controller"
	"github.com/rancher/wrangler/pkg/schemes"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

func init() {
	schemes.Register(v1beta.AddToScheme)
}

type Interface interface {
	WireguardAccessPeer() WireguardAccessPeerController
	WireguardAccessRule() WireguardAccessRuleController
}

func New(controllerFactory controller.SharedControllerFactory) Interface {
	return &version{
		controllerFactory: controllerFactory,
	}
}

type version struct {
	controllerFactory controller.SharedControllerFactory
}

func (c *version) WireguardAccessPeer() WireguardAccessPeerController {
	return NewWireguardAccessPeerController(schema.GroupVersionKind{Group: "wga.kraudcloud.com", Version: "v1beta", Kind: "WireguardAccessPeer"}, "wireguardaccesspeers", false, c.controllerFactory)
}
func (c *version) WireguardAccessRule() WireguardAccessRuleController {
	return NewWireguardAccessRuleController(schema.GroupVersionKind{Group: "wga.kraudcloud.com", Version: "v1beta", Kind: "WireguardAccessRule"}, "wireguardaccessrules", false, c.controllerFactory)
}
