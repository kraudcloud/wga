---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wga-endpoint
  labels:
    {{- include "wga.labels" . | nindent 4 -}}
    {{- if.Values.endpoint.labels }}
    {{- toYaml .Values.endpoint.labels | nindent 4 -}}
    {{- end }}
    app: wga-endpoint
  {{- if .Values.endpoint.annotations }}
  annotations:
  {{- .Values.endpoint.annotations | toYaml | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wga-endpoint
  template:
    metadata:
      labels:
        app: wga-endpoint
    spec:
      serviceAccountName: {{include "wga.serviceAccountName" .}}
      containers:
        {{- if .Values.endpoint.extraContainers }}
        {{- toYaml .Values.endpoint.extraContainers | nindent 8 }}
        {{- end }}
        - image: {{ include "wga.endpointImage" . }}
          {{- if .Values.endpoint.image.pullPolicy }}
          imagePullPolicy: {{.Values.endpoint.image.pullPolicy }}
          {{- end }}
          name: wga-endpoint
          command: [wga, ep]
          ports:
            - containerPort: {{.Values.endpoint.service.port}}
              name: wireguard
              protocol: UDP
          resources:
            {{- toYaml .Values.endpoint.resources | nindent 12 }}
          env:
            - name: WGA_CLIENT_CIDR
              value: {{.Values.endpoint.clientCIDR}}
            - name: WGA_SERVER_ADDRESS
            {{if and (not .Values.endpoint.service.loadBalancerIP) (not .Values.endpoint.address)}}
            {{- fail "You must set either endpoint.address or endpoint.service.loadBalancerIP"}}
            {{- end }}
              value: {{default .Values.endpoint.address .Values.endpoint.service.loadBalancerIP }}
            - name: WGA_DNS_ADDRESSES
            {{- if .Values.unbound.ip }}
              value: {{ .Values.unbound.ip | quote }}
            {{- else }}
              {{- fail "You must set unbound.ip"}}
            {{- end }}
            - name: WGA_ALLOWED_IPS
              value: {{join "," .Values.endpoint.allowedIPs}}
              {{- if .Values.endpoint.logLevel }}
            - name: LOG_LEVEL
              value: "{{ .Values.endpoint.logLevel }}"
              {{- end }}
            {{- if and .Values.endpoint.resources.limits .Values.endpoint.resources.limits.memory }}
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: wga-endpoint
                  resource: limits.memory
            {{- end }}
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
          volumeMounts:
            - mountPath: /etc/wga/endpoint/
              name: endpoint
      restartPolicy: Always
      volumes:
        {{- if .Values.endpoint.extraVolumes }}
        {{- toYaml .Values.endpoint.extraVolumes | nindent 8 }}
        {{- end }}
        - name: endpoint
          secret:
            defaultMode: 420
            {{- if .Values.endpoint.privateKeySecretName }}
            secretName: {{ .Values.endpoint.privateKeySecretName }}
            {{- else }}
            {{- fail "You must set endpoint.privateKeySecretName as a reference to a secret in the same namespace. It must contain a `privateKey` field with the Wireguard private key." }}
            {{- end }}
